#!/usr/bin/env node
'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _lib = require('../lib');

var _lib2 = _interopRequireDefault(_lib);

var _gitRawCommits = require('git-raw-commits');

var _gitRawCommits2 = _interopRequireDefault(_gitRawCommits);

var _meow = require('meow');

var _meow2 = _interopRequireDefault(_meow);

var _packageJson = require('../../package.json');

var _packageJson2 = _interopRequireDefault(_packageJson);

var _through2Concurrent = require('through2-concurrent');

var _through2Concurrent2 = _interopRequireDefault(_through2Concurrent);

var cli = (0, _meow2['default'])({
  help: ['Usage', '  $ conventional-commits-detector [<number of samples>]', '', 'Examples', '  $ conventional-commits-detector', '  $ conventional-commits-detector 10'],
  pkg: _packageJson2['default']
});

var input = cli.input[0];
var sampleCount = undefined;
var commits = [];

if (input) {
  sampleCount = parseInt(input, 10);
}

(0, _gitRawCommits2['default'])({
  from: sampleCount ? 'HEAD~' + sampleCount : null
}).on('error', function (err) {
  console.error(err.message);
  process.exit(1);
}).pipe((0, _through2Concurrent2['default'])(function (data, enc, cb) {
  commits.push(data.toString());
  cb();
}, function () {
  var conventions = (0, _lib2['default'])(commits);
  console.log(conventions);
}));